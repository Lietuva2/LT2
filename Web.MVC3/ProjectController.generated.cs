// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Web.Controllers
{
    public partial class ProjectController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProjectController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ToDos()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToDos);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddToDo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddToDo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FinishTodo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FinishTodo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteToDo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteToDo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetToDoEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetToDoEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditToDo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditToDo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReorderToDos()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReorderToDos);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Comments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Comments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveTempModel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveTempModel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Team()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Team);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ConfirmMember()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmMember);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetProjectMembersEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetProjectMembersEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CancelProjectMembersEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelProjectMembersEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveProjectMembers()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveProjectMembers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MileStones()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MileStones);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddMileStone()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddMileStone);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteMileStone()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteMileStone);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetMileStoneEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMileStoneEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditMileStone()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditMileStone);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Settings()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Settings);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetMyProjects()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMyProjects);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextMyProjectsPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextMyProjectsPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddInvitedUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvitedUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult InviteUsers()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InviteUsers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RemoveMember()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveMember);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReInvite()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReInvite);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddOrganizationMembers()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddOrganizationMembers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TakeToDo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TakeToDo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Back()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProjectController Actions { get { return MVC.Project; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Project";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Project";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ToDos = "ToDos";
            public readonly string AddToDo = "AddToDo";
            public readonly string FinishTodo = "FinishTodo";
            public readonly string DeleteToDo = "DeleteToDo";
            public readonly string GetToDoEdit = "GetToDoEdit";
            public readonly string EditToDo = "EditToDo";
            public readonly string ReorderToDos = "ReorderToDos";
            public readonly string Comments = "Comments";
            public readonly string AddComment = "AddComment";
            public readonly string SaveTempModel = "SaveTempModel";
            public readonly string DeleteComment = "DeleteComment";
            public readonly string Team = "Team";
            public readonly string ConfirmMember = "ConfirmMember";
            public readonly string GetProjectMembersEdit = "GetProjectMembersEdit";
            public readonly string CancelProjectMembersEdit = "CancelProjectMembersEdit";
            public readonly string SaveProjectMembers = "SaveProjectMembers";
            public readonly string MileStones = "MileStones";
            public readonly string AddMileStone = "AddMileStone";
            public readonly string DeleteMileStone = "DeleteMileStone";
            public readonly string GetMileStoneEdit = "GetMileStoneEdit";
            public readonly string EditMileStone = "EditMileStone";
            public readonly string Settings = "Settings";
            public readonly string GetMyProjects = "GetMyProjects";
            public readonly string GetNextMyProjectsPage = "GetNextMyProjectsPage";
            public readonly string AddInvitedUser = "AddInvitedUser";
            public readonly string InviteUsers = "InviteUsers";
            public readonly string RemoveMember = "RemoveMember";
            public readonly string ReInvite = "ReInvite";
            public readonly string AddOrganizationMembers = "AddOrganizationMembers";
            public readonly string TakeToDo = "TakeToDo";
            public readonly string RedirectToSuccessAction = "RedirectToSuccessAction";
            public readonly string RedirectToFailureAction = "RedirectToFailureAction";
            public readonly string SaveAndRedirect = "SaveAndRedirect";
            public readonly string DeleteAndRedirect = "DeleteAndRedirect";
            public readonly string Back = "Back";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ToDos = "ToDos";
            public const string AddToDo = "AddToDo";
            public const string FinishTodo = "FinishTodo";
            public const string DeleteToDo = "DeleteToDo";
            public const string GetToDoEdit = "GetToDoEdit";
            public const string EditToDo = "EditToDo";
            public const string ReorderToDos = "ReorderToDos";
            public const string Comments = "Comments";
            public const string AddComment = "AddComment";
            public const string SaveTempModel = "SaveTempModel";
            public const string DeleteComment = "DeleteComment";
            public const string Team = "Team";
            public const string ConfirmMember = "ConfirmMember";
            public const string GetProjectMembersEdit = "GetProjectMembersEdit";
            public const string CancelProjectMembersEdit = "CancelProjectMembersEdit";
            public const string SaveProjectMembers = "SaveProjectMembers";
            public const string MileStones = "MileStones";
            public const string AddMileStone = "AddMileStone";
            public const string DeleteMileStone = "DeleteMileStone";
            public const string GetMileStoneEdit = "GetMileStoneEdit";
            public const string EditMileStone = "EditMileStone";
            public const string Settings = "Settings";
            public const string GetMyProjects = "GetMyProjects";
            public const string GetNextMyProjectsPage = "GetNextMyProjectsPage";
            public const string AddInvitedUser = "AddInvitedUser";
            public const string InviteUsers = "InviteUsers";
            public const string RemoveMember = "RemoveMember";
            public const string ReInvite = "ReInvite";
            public const string AddOrganizationMembers = "AddOrganizationMembers";
            public const string TakeToDo = "TakeToDo";
            public const string RedirectToSuccessAction = "RedirectToSuccessAction";
            public const string RedirectToFailureAction = "RedirectToFailureAction";
            public const string SaveAndRedirect = "SaveAndRedirect";
            public const string DeleteAndRedirect = "DeleteAndRedirect";
            public const string Back = "Back";
        }


        static readonly ActionParamsClass_ToDos s_params_ToDos = new ActionParamsClass_ToDos();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ToDos ToDosParams { get { return s_params_ToDos; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ToDos
        {
            public readonly string projectId = "projectId";
        }
        static readonly ActionParamsClass_AddToDo s_params_AddToDo = new ActionParamsClass_AddToDo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddToDo AddToDoParams { get { return s_params_AddToDo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddToDo
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_FinishTodo s_params_FinishTodo = new ActionParamsClass_FinishTodo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FinishTodo FinishTodoParams { get { return s_params_FinishTodo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FinishTodo
        {
            public readonly string projectId = "projectId";
            public readonly string milestoneId = "milestoneId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_DeleteToDo s_params_DeleteToDo = new ActionParamsClass_DeleteToDo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteToDo DeleteToDoParams { get { return s_params_DeleteToDo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteToDo
        {
            public readonly string projectId = "projectId";
            public readonly string milestoneId = "milestoneId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetToDoEdit s_params_GetToDoEdit = new ActionParamsClass_GetToDoEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetToDoEdit GetToDoEditParams { get { return s_params_GetToDoEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetToDoEdit
        {
            public readonly string projectId = "projectId";
            public readonly string milestoneId = "milestoneId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_EditToDo s_params_EditToDo = new ActionParamsClass_EditToDo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditToDo EditToDoParams { get { return s_params_EditToDo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditToDo
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ReorderToDos s_params_ReorderToDos = new ActionParamsClass_ReorderToDos();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReorderToDos ReorderToDosParams { get { return s_params_ReorderToDos; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReorderToDos
        {
            public readonly string projectId = "projectId";
            public readonly string milestoneId = "milestoneId";
            public readonly string startPos = "startPos";
            public readonly string endPos = "endPos";
        }
        static readonly ActionParamsClass_Comments s_params_Comments = new ActionParamsClass_Comments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Comments CommentsParams { get { return s_params_Comments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Comments
        {
            public readonly string projectId = "projectId";
            public readonly string milestoneId = "milestoneId";
            public readonly string toDoId = "toDoId";
        }
        static readonly ActionParamsClass_AddComment s_params_AddComment = new ActionParamsClass_AddComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddComment AddCommentParams { get { return s_params_AddComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddComment
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_SaveTempModel s_params_SaveTempModel = new ActionParamsClass_SaveTempModel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveTempModel SaveTempModelParams { get { return s_params_SaveTempModel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveTempModel
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_DeleteComment s_params_DeleteComment = new ActionParamsClass_DeleteComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteComment DeleteCommentParams { get { return s_params_DeleteComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteComment
        {
            public readonly string projectId = "projectId";
            public readonly string milestoneId = "milestoneId";
            public readonly string toDoId = "toDoId";
            public readonly string commentId = "commentId";
        }
        static readonly ActionParamsClass_Team s_params_Team = new ActionParamsClass_Team();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Team TeamParams { get { return s_params_Team; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Team
        {
            public readonly string projectId = "projectId";
        }
        static readonly ActionParamsClass_ConfirmMember s_params_ConfirmMember = new ActionParamsClass_ConfirmMember();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ConfirmMember ConfirmMemberParams { get { return s_params_ConfirmMember; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ConfirmMember
        {
            public readonly string projectId = "projectId";
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_GetProjectMembersEdit s_params_GetProjectMembersEdit = new ActionParamsClass_GetProjectMembersEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetProjectMembersEdit GetProjectMembersEditParams { get { return s_params_GetProjectMembersEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetProjectMembersEdit
        {
            public readonly string projectId = "projectId";
        }
        static readonly ActionParamsClass_CancelProjectMembersEdit s_params_CancelProjectMembersEdit = new ActionParamsClass_CancelProjectMembersEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CancelProjectMembersEdit CancelProjectMembersEditParams { get { return s_params_CancelProjectMembersEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CancelProjectMembersEdit
        {
            public readonly string projectId = "projectId";
        }
        static readonly ActionParamsClass_SaveProjectMembers s_params_SaveProjectMembers = new ActionParamsClass_SaveProjectMembers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveProjectMembers SaveProjectMembersParams { get { return s_params_SaveProjectMembers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveProjectMembers
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_MileStones s_params_MileStones = new ActionParamsClass_MileStones();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MileStones MileStonesParams { get { return s_params_MileStones; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MileStones
        {
            public readonly string projectId = "projectId";
        }
        static readonly ActionParamsClass_AddMileStone s_params_AddMileStone = new ActionParamsClass_AddMileStone();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddMileStone AddMileStoneParams { get { return s_params_AddMileStone; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddMileStone
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_DeleteMileStone s_params_DeleteMileStone = new ActionParamsClass_DeleteMileStone();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteMileStone DeleteMileStoneParams { get { return s_params_DeleteMileStone; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteMileStone
        {
            public readonly string projectId = "projectId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetMileStoneEdit s_params_GetMileStoneEdit = new ActionParamsClass_GetMileStoneEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMileStoneEdit GetMileStoneEditParams { get { return s_params_GetMileStoneEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMileStoneEdit
        {
            public readonly string projectId = "projectId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_EditMileStone s_params_EditMileStone = new ActionParamsClass_EditMileStone();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditMileStone EditMileStoneParams { get { return s_params_EditMileStone; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditMileStone
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Settings s_params_Settings = new ActionParamsClass_Settings();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Settings SettingsParams { get { return s_params_Settings; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Settings
        {
            public readonly string projectId = "projectId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_GetMyProjects s_params_GetMyProjects = new ActionParamsClass_GetMyProjects();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMyProjects GetMyProjectsParams { get { return s_params_GetMyProjects; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMyProjects
        {
            public readonly string userObjectid = "userObjectid";
        }
        static readonly ActionParamsClass_GetNextMyProjectsPage s_params_GetNextMyProjectsPage = new ActionParamsClass_GetNextMyProjectsPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextMyProjectsPage GetNextMyProjectsPageParams { get { return s_params_GetNextMyProjectsPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextMyProjectsPage
        {
            public readonly string pageIndex = "pageIndex";
            public readonly string userObjectId = "userObjectId";
        }
        static readonly ActionParamsClass_AddInvitedUser s_params_AddInvitedUser = new ActionParamsClass_AddInvitedUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddInvitedUser AddInvitedUserParams { get { return s_params_AddInvitedUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddInvitedUser
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_InviteUsers s_params_InviteUsers = new ActionParamsClass_InviteUsers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_InviteUsers InviteUsersParams { get { return s_params_InviteUsers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_InviteUsers
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_RemoveMember s_params_RemoveMember = new ActionParamsClass_RemoveMember();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveMember RemoveMemberParams { get { return s_params_RemoveMember; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveMember
        {
            public readonly string projectId = "projectId";
            public readonly string memberId = "memberId";
        }
        static readonly ActionParamsClass_ReInvite s_params_ReInvite = new ActionParamsClass_ReInvite();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReInvite ReInviteParams { get { return s_params_ReInvite; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReInvite
        {
            public readonly string projectId = "projectId";
            public readonly string userEmail = "userEmail";
        }
        static readonly ActionParamsClass_AddOrganizationMembers s_params_AddOrganizationMembers = new ActionParamsClass_AddOrganizationMembers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddOrganizationMembers AddOrganizationMembersParams { get { return s_params_AddOrganizationMembers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddOrganizationMembers
        {
            public readonly string projectId = "projectId";
        }
        static readonly ActionParamsClass_TakeToDo s_params_TakeToDo = new ActionParamsClass_TakeToDo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TakeToDo TakeToDoParams { get { return s_params_TakeToDo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TakeToDo
        {
            public readonly string projectId = "projectId";
            public readonly string mileStoneId = "mileStoneId";
            public readonly string toDoId = "toDoId";
        }
        static readonly ActionParamsClass_RedirectToSuccessAction s_params_RedirectToSuccessAction = new ActionParamsClass_RedirectToSuccessAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToSuccessAction RedirectToSuccessActionParams { get { return s_params_RedirectToSuccessAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToSuccessAction
        {
            public readonly string result = "result";
            public readonly string message = "message";
            public readonly string openDialog = "openDialog";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_RedirectToFailureAction s_params_RedirectToFailureAction = new ActionParamsClass_RedirectToFailureAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToFailureAction RedirectToFailureActionParams { get { return s_params_RedirectToFailureAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToFailureAction
        {
            public readonly string result = "result";
            public readonly string message = "message";
            public readonly string openDialog = "openDialog";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_SaveAndRedirect s_params_SaveAndRedirect = new ActionParamsClass_SaveAndRedirect();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveAndRedirect SaveAndRedirectParams { get { return s_params_SaveAndRedirect; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveAndRedirect
        {
            public readonly string save = "save";
            public readonly string result = "result";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_DeleteAndRedirect s_params_DeleteAndRedirect = new ActionParamsClass_DeleteAndRedirect();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteAndRedirect DeleteAndRedirectParams { get { return s_params_DeleteAndRedirect; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteAndRedirect
        {
            public readonly string delete = "delete";
            public readonly string result = "result";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_Back s_params_Back = new ActionParamsClass_Back();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Back BackParams { get { return s_params_Back; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Back
        {
            public readonly string returnTo = "returnTo";
            public readonly string defaultReturnTo = "defaultReturnTo";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Comment = "Comment";
                public readonly string Comments = "Comments";
                public readonly string EditMileStoneItem = "EditMileStoneItem";
                public readonly string EditToDoItem = "EditToDoItem";
                public readonly string FinishedToDoItem = "FinishedToDoItem";
                public readonly string InsertToDo = "InsertToDo";
                public readonly string JoinProject = "JoinProject";
                public readonly string Menu = "Menu";
                public readonly string MileStone = "MileStone";
                public readonly string MileStoneItem = "MileStoneItem";
                public readonly string MileStones = "MileStones";
                public readonly string PendingConfirmationMessage = "PendingConfirmationMessage";
                public readonly string ProjectMembers = "ProjectMembers";
                public readonly string ProjectMembersEdit = "ProjectMembersEdit";
                public readonly string Settings = "Settings";
                public readonly string Team = "Team";
                public readonly string ToDoItem = "ToDoItem";
                public readonly string ToDos = "ToDos";
            }
            public readonly string Comment = "~/Views/Project/Comment.cshtml";
            public readonly string Comments = "~/Views/Project/Comments.cshtml";
            public readonly string EditMileStoneItem = "~/Views/Project/EditMileStoneItem.cshtml";
            public readonly string EditToDoItem = "~/Views/Project/EditToDoItem.cshtml";
            public readonly string FinishedToDoItem = "~/Views/Project/FinishedToDoItem.cshtml";
            public readonly string InsertToDo = "~/Views/Project/InsertToDo.cshtml";
            public readonly string JoinProject = "~/Views/Project/JoinProject.cshtml";
            public readonly string Menu = "~/Views/Project/Menu.cshtml";
            public readonly string MileStone = "~/Views/Project/MileStone.cshtml";
            public readonly string MileStoneItem = "~/Views/Project/MileStoneItem.cshtml";
            public readonly string MileStones = "~/Views/Project/MileStones.cshtml";
            public readonly string PendingConfirmationMessage = "~/Views/Project/PendingConfirmationMessage.cshtml";
            public readonly string ProjectMembers = "~/Views/Project/ProjectMembers.cshtml";
            public readonly string ProjectMembersEdit = "~/Views/Project/ProjectMembersEdit.cshtml";
            public readonly string Settings = "~/Views/Project/Settings.cshtml";
            public readonly string Team = "~/Views/Project/Team.cshtml";
            public readonly string ToDoItem = "~/Views/Project/ToDoItem.cshtml";
            public readonly string ToDos = "~/Views/Project/ToDos.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ProjectController : Web.Controllers.ProjectController
    {
        public T4MVC_ProjectController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ToDosOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ToDos(string projectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToDos);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ToDosOverride(callInfo, projectId);
            return callInfo;
        }

        [NonAction]
        partial void AddToDoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.ProjectToDosModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddToDo(Data.ViewModels.Project.ProjectToDosModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddToDo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddToDoOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void FinishTodoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string milestoneId, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult FinishTodo(string projectId, string milestoneId, string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FinishTodo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "milestoneId", milestoneId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            FinishTodoOverride(callInfo, projectId, milestoneId, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteToDoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string milestoneId, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteToDo(string projectId, string milestoneId, string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteToDo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "milestoneId", milestoneId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteToDoOverride(callInfo, projectId, milestoneId, id);
            return callInfo;
        }

        [NonAction]
        partial void GetToDoEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string milestoneId, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetToDoEdit(string projectId, string milestoneId, string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetToDoEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "milestoneId", milestoneId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetToDoEditOverride(callInfo, projectId, milestoneId, id);
            return callInfo;
        }

        [NonAction]
        partial void EditToDoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.EditToDoModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditToDo(Data.ViewModels.Project.EditToDoModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditToDo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EditToDoOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ReorderToDosOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string milestoneId, int startPos, int endPos);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReorderToDos(string projectId, string milestoneId, int startPos, int endPos)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReorderToDos);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "milestoneId", milestoneId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "startPos", startPos);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "endPos", endPos);
            ReorderToDosOverride(callInfo, projectId, milestoneId, startPos, endPos);
            return callInfo;
        }

        [NonAction]
        partial void CommentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string milestoneId, string toDoId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Comments(string projectId, string milestoneId, string toDoId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Comments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "milestoneId", milestoneId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "toDoId", toDoId);
            CommentsOverride(callInfo, projectId, milestoneId, toDoId);
            return callInfo;
        }

        [NonAction]
        partial void AddCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.CommentsModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddComment(Data.ViewModels.Project.CommentsModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddCommentOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void SaveTempModelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.CommentsModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveTempModel(Data.ViewModels.Project.CommentsModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveTempModel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SaveTempModelOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void DeleteCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string milestoneId, string toDoId, string commentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteComment(string projectId, string milestoneId, string toDoId, string commentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "milestoneId", milestoneId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "toDoId", toDoId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentId", commentId);
            DeleteCommentOverride(callInfo, projectId, milestoneId, toDoId, commentId);
            return callInfo;
        }

        [NonAction]
        partial void TeamOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Team(string projectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Team);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            TeamOverride(callInfo, projectId);
            return callInfo;
        }

        [NonAction]
        partial void ConfirmMemberOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string userId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ConfirmMember(string projectId, string userId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConfirmMember);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ConfirmMemberOverride(callInfo, projectId, userId);
            return callInfo;
        }

        [NonAction]
        partial void GetProjectMembersEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetProjectMembersEdit(string projectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetProjectMembersEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            GetProjectMembersEditOverride(callInfo, projectId);
            return callInfo;
        }

        [NonAction]
        partial void CancelProjectMembersEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CancelProjectMembersEdit(string projectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelProjectMembersEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            CancelProjectMembersEditOverride(callInfo, projectId);
            return callInfo;
        }

        [NonAction]
        partial void SaveProjectMembersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.ProjectTeamModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveProjectMembers(Data.ViewModels.Project.ProjectTeamModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveProjectMembers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SaveProjectMembersOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void MileStonesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult MileStones(string projectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MileStones);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            MileStonesOverride(callInfo, projectId);
            return callInfo;
        }

        [NonAction]
        partial void AddMileStoneOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.MileStoneEditModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddMileStone(Data.ViewModels.Project.MileStoneEditModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddMileStone);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddMileStoneOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void DeleteMileStoneOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteMileStone(string projectId, string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteMileStone);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteMileStoneOverride(callInfo, projectId, id);
            return callInfo;
        }

        [NonAction]
        partial void GetMileStoneEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetMileStoneEdit(string projectId, string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMileStoneEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetMileStoneEditOverride(callInfo, projectId, id);
            return callInfo;
        }

        [NonAction]
        partial void EditMileStoneOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.EditMileStoneModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditMileStone(Data.ViewModels.Project.EditMileStoneModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditMileStone);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EditMileStoneOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void SettingsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Settings(string projectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Settings);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            SettingsOverride(callInfo, projectId);
            return callInfo;
        }

        [NonAction]
        partial void SettingsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.SettingsModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Settings(Data.ViewModels.Project.SettingsModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Settings);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SettingsOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void GetMyProjectsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectid);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetMyProjects(string userObjectid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMyProjects);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectid", userObjectid);
            GetMyProjectsOverride(callInfo, userObjectid);
            return callInfo;
        }

        [NonAction]
        partial void GetNextMyProjectsPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? pageIndex, string userObjectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextMyProjectsPage(int? pageIndex, string userObjectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextMyProjectsPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            GetNextMyProjectsPageOverride(callInfo, pageIndex, userObjectId);
            return callInfo;
        }

        [NonAction]
        partial void AddInvitedUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Base.InviteUserModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInvitedUser(Data.ViewModels.Base.InviteUserModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvitedUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddInvitedUserOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void InviteUsersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Project.ProjectTeamModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult InviteUsers(Data.ViewModels.Project.ProjectTeamModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InviteUsers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            InviteUsersOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void RemoveMemberOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string memberId);

        [NonAction]
        public override System.Web.Mvc.ActionResult RemoveMember(string projectId, string memberId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveMember);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "memberId", memberId);
            RemoveMemberOverride(callInfo, projectId, memberId);
            return callInfo;
        }

        [NonAction]
        partial void ReInviteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string userEmail);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReInvite(string projectId, string userEmail)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReInvite);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userEmail", userEmail);
            ReInviteOverride(callInfo, projectId, userEmail);
            return callInfo;
        }

        [NonAction]
        partial void AddOrganizationMembersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddOrganizationMembers(string projectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddOrganizationMembers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            AddOrganizationMembersOverride(callInfo, projectId);
            return callInfo;
        }

        [NonAction]
        partial void TakeToDoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectId, string mileStoneId, string toDoId);

        [NonAction]
        public override System.Web.Mvc.ActionResult TakeToDo(string projectId, string mileStoneId, string toDoId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TakeToDo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectId", projectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mileStoneId", mileStoneId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "toDoId", toDoId);
            TakeToDoOverride(callInfo, projectId, mileStoneId, toDoId);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Mvc.ActionResult result, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, result, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Mvc.ActionResult result, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, result, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToFailureActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction(System.Web.Mvc.ActionResult result, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToFailureActionOverride(callInfo, result, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void SaveAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action save, System.Web.Mvc.ActionResult result);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect(System.Action save, System.Web.Mvc.ActionResult result)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "save", save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            SaveAndRedirectOverride(callInfo, save, result);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action delete, System.Web.Mvc.ActionResult result);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect(System.Action delete, System.Web.Mvc.ActionResult result)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "delete", delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            DeleteAndRedirectOverride(callInfo, delete, result);
            return callInfo;
        }

        [NonAction]
        partial void BackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnTo, string defaultReturnTo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Back(string returnTo, string defaultReturnTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnTo", returnTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "defaultReturnTo", defaultReturnTo);
            BackOverride(callInfo, returnTo, defaultReturnTo);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, routeValueDictionary, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, routeValueDictionary, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToFailureActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToFailureActionOverride(callInfo, routeValueDictionary, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void SaveAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action save, System.Web.Routing.RouteValueDictionary routeValueDictionary);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect(System.Action save, System.Web.Routing.RouteValueDictionary routeValueDictionary)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "save", save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            SaveAndRedirectOverride(callInfo, save, routeValueDictionary);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action delete, System.Web.Routing.RouteValueDictionary routeValueDictionary);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect(System.Action delete, System.Web.Routing.RouteValueDictionary routeValueDictionary)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "delete", delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            DeleteAndRedirectOverride(callInfo, delete, routeValueDictionary);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
