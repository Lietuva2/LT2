// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Web.Controllers
{
    public partial class ProblemController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProblemController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Single()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Single);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Create()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetMoreComments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMoreComments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LikeComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LikeComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UndoLikeComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UndoLikeComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VoteFor()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteFor);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VoteAgainst()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteAgainst);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetCreatedProblems()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCreatedProblems);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextCreatedProblemsPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextCreatedProblemsPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetProblemSupporters()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetProblemSupporters);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextProblemSupportersPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextProblemSupportersPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveMyCategories()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveMyCategories);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FilterPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FilterPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetMatchedProblems()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMatchedProblems);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddRelatedProblem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddRelatedProblem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddRelatedIdea()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddRelatedIdea);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteRelatedIdea()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteRelatedIdea);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Back()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProblemController Actions { get { return MVC.Problem; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Problem";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Problem";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Single = "Single";
            public readonly string GetNextPage = "GetNextPage";
            public readonly string Create = "Create";
            public readonly string AddComment = "AddComment";
            public readonly string GetMoreComments = "GetMoreComments";
            public readonly string DeleteComment = "DeleteComment";
            public readonly string LikeComment = "LikeComment";
            public readonly string UndoLikeComment = "UndoLikeComment";
            public readonly string VoteFor = "VoteFor";
            public readonly string VoteAgainst = "VoteAgainst";
            public readonly string GetCreatedProblems = "GetCreatedProblems";
            public readonly string GetNextCreatedProblemsPage = "GetNextCreatedProblemsPage";
            public readonly string GetProblemSupporters = "GetProblemSupporters";
            public readonly string GetNextProblemSupportersPage = "GetNextProblemSupportersPage";
            public readonly string SaveMyCategories = "SaveMyCategories";
            public readonly string FilterPage = "FilterPage";
            public readonly string GetMatchedProblems = "GetMatchedProblems";
            public readonly string AddRelatedProblem = "AddRelatedProblem";
            public readonly string AddRelatedIdea = "AddRelatedIdea";
            public readonly string Delete = "Delete";
            public readonly string DeleteRelatedIdea = "DeleteRelatedIdea";
            public readonly string UpdateDb = "UpdateDb";
            public readonly string RedirectToSuccessAction = "RedirectToSuccessAction";
            public readonly string RedirectToFailureAction = "RedirectToFailureAction";
            public readonly string SaveAndRedirect = "SaveAndRedirect";
            public readonly string DeleteAndRedirect = "DeleteAndRedirect";
            public readonly string Back = "Back";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Single = "Single";
            public const string GetNextPage = "GetNextPage";
            public const string Create = "Create";
            public const string AddComment = "AddComment";
            public const string GetMoreComments = "GetMoreComments";
            public const string DeleteComment = "DeleteComment";
            public const string LikeComment = "LikeComment";
            public const string UndoLikeComment = "UndoLikeComment";
            public const string VoteFor = "VoteFor";
            public const string VoteAgainst = "VoteAgainst";
            public const string GetCreatedProblems = "GetCreatedProblems";
            public const string GetNextCreatedProblemsPage = "GetNextCreatedProblemsPage";
            public const string GetProblemSupporters = "GetProblemSupporters";
            public const string GetNextProblemSupportersPage = "GetNextProblemSupportersPage";
            public const string SaveMyCategories = "SaveMyCategories";
            public const string FilterPage = "FilterPage";
            public const string GetMatchedProblems = "GetMatchedProblems";
            public const string AddRelatedProblem = "AddRelatedProblem";
            public const string AddRelatedIdea = "AddRelatedIdea";
            public const string Delete = "Delete";
            public const string DeleteRelatedIdea = "DeleteRelatedIdea";
            public const string UpdateDb = "UpdateDb";
            public const string RedirectToSuccessAction = "RedirectToSuccessAction";
            public const string RedirectToFailureAction = "RedirectToFailureAction";
            public const string SaveAndRedirect = "SaveAndRedirect";
            public const string DeleteAndRedirect = "DeleteAndRedirect";
            public const string Back = "Back";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string problemListView = "problemListView";
            public readonly string problemListSort = "problemListSort";
            public readonly string organizationId = "organizationId";
            public readonly string problemId = "problemId";
        }
        static readonly ActionParamsClass_Single s_params_Single = new ActionParamsClass_Single();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Single SingleParams { get { return s_params_Single; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Single
        {
            public readonly string problemId = "problemId";
        }
        static readonly ActionParamsClass_GetNextPage s_params_GetNextPage = new ActionParamsClass_GetNextPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextPage GetNextPageParams { get { return s_params_GetNextPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextPage
        {
            public readonly string pageIndex = "pageIndex";
            public readonly string organizationId = "organizationId";
        }
        static readonly ActionParamsClass_Create s_params_Create = new ActionParamsClass_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Create CreateParams { get { return s_params_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Create
        {
            public readonly string model = "model";
            public readonly string embed = "embed";
        }
        static readonly ActionParamsClass_AddComment s_params_AddComment = new ActionParamsClass_AddComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddComment AddCommentParams { get { return s_params_AddComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddComment
        {
            public readonly string model = "model";
            public readonly string embed = "embed";
        }
        static readonly ActionParamsClass_GetMoreComments s_params_GetMoreComments = new ActionParamsClass_GetMoreComments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMoreComments GetMoreCommentsParams { get { return s_params_GetMoreComments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMoreComments
        {
            public readonly string problemId = "problemId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_DeleteComment s_params_DeleteComment = new ActionParamsClass_DeleteComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteComment DeleteCommentParams { get { return s_params_DeleteComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteComment
        {
            public readonly string id = "id";
            public readonly string commentId = "commentId";
        }
        static readonly ActionParamsClass_LikeComment s_params_LikeComment = new ActionParamsClass_LikeComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LikeComment LikeCommentParams { get { return s_params_LikeComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LikeComment
        {
            public readonly string id = "id";
            public readonly string commentId = "commentId";
        }
        static readonly ActionParamsClass_UndoLikeComment s_params_UndoLikeComment = new ActionParamsClass_UndoLikeComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UndoLikeComment UndoLikeCommentParams { get { return s_params_UndoLikeComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UndoLikeComment
        {
            public readonly string id = "id";
            public readonly string commentId = "commentId";
        }
        static readonly ActionParamsClass_VoteFor s_params_VoteFor = new ActionParamsClass_VoteFor();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VoteFor VoteForParams { get { return s_params_VoteFor; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VoteFor
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_VoteAgainst s_params_VoteAgainst = new ActionParamsClass_VoteAgainst();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VoteAgainst VoteAgainstParams { get { return s_params_VoteAgainst; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VoteAgainst
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetCreatedProblems s_params_GetCreatedProblems = new ActionParamsClass_GetCreatedProblems();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCreatedProblems GetCreatedProblemsParams { get { return s_params_GetCreatedProblems; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCreatedProblems
        {
            public readonly string userObjectId = "userObjectId";
        }
        static readonly ActionParamsClass_GetNextCreatedProblemsPage s_params_GetNextCreatedProblemsPage = new ActionParamsClass_GetNextCreatedProblemsPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextCreatedProblemsPage GetNextCreatedProblemsPageParams { get { return s_params_GetNextCreatedProblemsPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextCreatedProblemsPage
        {
            public readonly string userObjectId = "userObjectId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_GetProblemSupporters s_params_GetProblemSupporters = new ActionParamsClass_GetProblemSupporters();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetProblemSupporters GetProblemSupportersParams { get { return s_params_GetProblemSupporters; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetProblemSupporters
        {
            public readonly string problemId = "problemId";
        }
        static readonly ActionParamsClass_GetNextProblemSupportersPage s_params_GetNextProblemSupportersPage = new ActionParamsClass_GetNextProblemSupportersPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextProblemSupportersPage GetNextProblemSupportersPageParams { get { return s_params_GetNextProblemSupportersPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextProblemSupportersPage
        {
            public readonly string problemId = "problemId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_SaveMyCategories s_params_SaveMyCategories = new ActionParamsClass_SaveMyCategories();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveMyCategories SaveMyCategoriesParams { get { return s_params_SaveMyCategories; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveMyCategories
        {
            public readonly string selectedCategoryIds = "selectedCategoryIds";
        }
        static readonly ActionParamsClass_FilterPage s_params_FilterPage = new ActionParamsClass_FilterPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FilterPage FilterPageParams { get { return s_params_FilterPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FilterPage
        {
            public readonly string selectedCategoryIds = "selectedCategoryIds";
        }
        static readonly ActionParamsClass_GetMatchedProblems s_params_GetMatchedProblems = new ActionParamsClass_GetMatchedProblems();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMatchedProblems GetMatchedProblemsParams { get { return s_params_GetMatchedProblems; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMatchedProblems
        {
            public readonly string prefix = "prefix";
        }
        static readonly ActionParamsClass_AddRelatedProblem s_params_AddRelatedProblem = new ActionParamsClass_AddRelatedProblem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddRelatedProblem AddRelatedProblemParams { get { return s_params_AddRelatedProblem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddRelatedProblem
        {
            public readonly string id = "id";
            public readonly string text = "text";
        }
        static readonly ActionParamsClass_AddRelatedIdea s_params_AddRelatedIdea = new ActionParamsClass_AddRelatedIdea();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddRelatedIdea AddRelatedIdeaParams { get { return s_params_AddRelatedIdea; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddRelatedIdea
        {
            public readonly string problemId = "problemId";
            public readonly string ideaId = "ideaId";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string problemId = "problemId";
        }
        static readonly ActionParamsClass_DeleteRelatedIdea s_params_DeleteRelatedIdea = new ActionParamsClass_DeleteRelatedIdea();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteRelatedIdea DeleteRelatedIdeaParams { get { return s_params_DeleteRelatedIdea; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteRelatedIdea
        {
            public readonly string ideaId = "ideaId";
            public readonly string problemId = "problemId";
        }
        static readonly ActionParamsClass_RedirectToSuccessAction s_params_RedirectToSuccessAction = new ActionParamsClass_RedirectToSuccessAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToSuccessAction RedirectToSuccessActionParams { get { return s_params_RedirectToSuccessAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToSuccessAction
        {
            public readonly string result = "result";
            public readonly string message = "message";
            public readonly string openDialog = "openDialog";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_RedirectToFailureAction s_params_RedirectToFailureAction = new ActionParamsClass_RedirectToFailureAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToFailureAction RedirectToFailureActionParams { get { return s_params_RedirectToFailureAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToFailureAction
        {
            public readonly string result = "result";
            public readonly string message = "message";
            public readonly string openDialog = "openDialog";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_SaveAndRedirect s_params_SaveAndRedirect = new ActionParamsClass_SaveAndRedirect();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveAndRedirect SaveAndRedirectParams { get { return s_params_SaveAndRedirect; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveAndRedirect
        {
            public readonly string save = "save";
            public readonly string result = "result";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_DeleteAndRedirect s_params_DeleteAndRedirect = new ActionParamsClass_DeleteAndRedirect();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteAndRedirect DeleteAndRedirectParams { get { return s_params_DeleteAndRedirect; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteAndRedirect
        {
            public readonly string delete = "delete";
            public readonly string result = "result";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_Back s_params_Back = new ActionParamsClass_Back();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Back BackParams { get { return s_params_Back; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Back
        {
            public readonly string returnTo = "returnTo";
            public readonly string defaultReturnTo = "defaultReturnTo";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Category = "Category";
                public readonly string Idea = "Idea";
                public readonly string Index = "Index";
                public readonly string List = "List";
                public readonly string ListItem = "ListItem";
                public readonly string Problem = "Problem";
                public readonly string ProblemInput = "ProblemInput";
                public readonly string Voting = "Voting";
            }
            public readonly string Category = "~/Views/Problem/Category.cshtml";
            public readonly string Idea = "~/Views/Problem/Idea.cshtml";
            public readonly string Index = "~/Views/Problem/Index.cshtml";
            public readonly string List = "~/Views/Problem/List.cshtml";
            public readonly string ListItem = "~/Views/Problem/ListItem.cshtml";
            public readonly string Problem = "~/Views/Problem/Problem.cshtml";
            public readonly string ProblemInput = "~/Views/Problem/ProblemInput.cshtml";
            public readonly string Voting = "~/Views/Problem/Voting.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ProblemController : Web.Controllers.ProblemController
    {
        public T4MVC_ProblemController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Services.Enums.ProblemListViews? problemListView, Services.Enums.ProblemListSorts? problemListSort, string organizationId, string problemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(Services.Enums.ProblemListViews? problemListView, Services.Enums.ProblemListSorts? problemListSort, string organizationId, string problemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemListView", problemListView);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemListSort", problemListSort);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            IndexOverride(callInfo, problemListView, problemListSort, organizationId, problemId);
            return callInfo;
        }

        [NonAction]
        partial void SingleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string problemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Single(string problemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Single);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            SingleOverride(callInfo, problemId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? pageIndex, string organizationId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextPage(int? pageIndex, string organizationId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            GetNextPageOverride(callInfo, pageIndex, organizationId);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Problem.ProblemCreateEditModel model, Data.ViewModels.Base.EmbedModel embed);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create(Data.ViewModels.Problem.ProblemCreateEditModel model, Data.ViewModels.Base.EmbedModel embed)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "embed", embed);
            CreateOverride(callInfo, model, embed);
            return callInfo;
        }

        [NonAction]
        partial void AddCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Comments.CommentView model, Data.ViewModels.Base.EmbedModel embed);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddComment(Data.ViewModels.Comments.CommentView model, Data.ViewModels.Base.EmbedModel embed)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "embed", embed);
            AddCommentOverride(callInfo, model, embed);
            return callInfo;
        }

        [NonAction]
        partial void GetMoreCommentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string problemId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetMoreComments(string problemId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMoreComments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetMoreCommentsOverride(callInfo, problemId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void DeleteCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string commentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteComment(string id, string commentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentId", commentId);
            DeleteCommentOverride(callInfo, id, commentId);
            return callInfo;
        }

        [NonAction]
        partial void LikeCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string commentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult LikeComment(string id, string commentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LikeComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentId", commentId);
            LikeCommentOverride(callInfo, id, commentId);
            return callInfo;
        }

        [NonAction]
        partial void UndoLikeCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string commentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult UndoLikeComment(string id, string commentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UndoLikeComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentId", commentId);
            UndoLikeCommentOverride(callInfo, id, commentId);
            return callInfo;
        }

        [NonAction]
        partial void VoteForOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult VoteFor(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteFor);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            VoteForOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void VoteAgainstOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult VoteAgainst(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteAgainst);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            VoteAgainstOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void GetCreatedProblemsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCreatedProblems(string userObjectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCreatedProblems);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            GetCreatedProblemsOverride(callInfo, userObjectId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextCreatedProblemsPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextCreatedProblemsPage(string userObjectId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextCreatedProblemsPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetNextCreatedProblemsPageOverride(callInfo, userObjectId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void GetProblemSupportersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string problemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetProblemSupporters(string problemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetProblemSupporters);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            GetProblemSupportersOverride(callInfo, problemId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextProblemSupportersPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string problemId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextProblemSupportersPage(string problemId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextProblemSupportersPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetNextProblemSupportersPageOverride(callInfo, problemId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void SaveMyCategoriesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IList<int> selectedCategoryIds);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveMyCategories(System.Collections.Generic.IList<int> selectedCategoryIds)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveMyCategories);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedCategoryIds", selectedCategoryIds);
            SaveMyCategoriesOverride(callInfo, selectedCategoryIds);
            return callInfo;
        }

        [NonAction]
        partial void FilterPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.List<int> selectedCategoryIds);

        [NonAction]
        public override System.Web.Mvc.ActionResult FilterPage(System.Collections.Generic.List<int> selectedCategoryIds)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FilterPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedCategoryIds", selectedCategoryIds);
            FilterPageOverride(callInfo, selectedCategoryIds);
            return callInfo;
        }

        [NonAction]
        partial void GetMatchedProblemsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string prefix);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetMatchedProblems(string prefix)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMatchedProblems);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "prefix", prefix);
            GetMatchedProblemsOverride(callInfo, prefix);
            return callInfo;
        }

        [NonAction]
        partial void AddRelatedProblemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string text);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddRelatedProblem(string id, string text)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddRelatedProblem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "text", text);
            AddRelatedProblemOverride(callInfo, id, text);
            return callInfo;
        }

        [NonAction]
        partial void AddRelatedIdeaOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string problemId, string ideaId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddRelatedIdea(string problemId, string ideaId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddRelatedIdea);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ideaId", ideaId);
            AddRelatedIdeaOverride(callInfo, problemId, ideaId);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string problemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(string problemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            DeleteOverride(callInfo, problemId);
            return callInfo;
        }

        [NonAction]
        partial void DeleteRelatedIdeaOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ideaId, string problemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteRelatedIdea(string ideaId, string problemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteRelatedIdea);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ideaId", ideaId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            DeleteRelatedIdeaOverride(callInfo, ideaId, problemId);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDbOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDb()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDb);
            UpdateDbOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Mvc.ActionResult result, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, result, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Mvc.ActionResult result, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, result, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToFailureActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction(System.Web.Mvc.ActionResult result, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToFailureActionOverride(callInfo, result, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void SaveAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action save, System.Web.Mvc.ActionResult result);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect(System.Action save, System.Web.Mvc.ActionResult result)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "save", save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            SaveAndRedirectOverride(callInfo, save, result);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action delete, System.Web.Mvc.ActionResult result);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect(System.Action delete, System.Web.Mvc.ActionResult result)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "delete", delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            DeleteAndRedirectOverride(callInfo, delete, result);
            return callInfo;
        }

        [NonAction]
        partial void BackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnTo, string defaultReturnTo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Back(string returnTo, string defaultReturnTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnTo", returnTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "defaultReturnTo", defaultReturnTo);
            BackOverride(callInfo, returnTo, defaultReturnTo);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, routeValueDictionary, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, routeValueDictionary, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToFailureActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToFailureActionOverride(callInfo, routeValueDictionary, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void SaveAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action save, System.Web.Routing.RouteValueDictionary routeValueDictionary);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect(System.Action save, System.Web.Routing.RouteValueDictionary routeValueDictionary)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "save", save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            SaveAndRedirectOverride(callInfo, save, routeValueDictionary);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action delete, System.Web.Routing.RouteValueDictionary routeValueDictionary);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect(System.Action delete, System.Web.Routing.RouteValueDictionary routeValueDictionary)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "delete", delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            DeleteAndRedirectOverride(callInfo, delete, routeValueDictionary);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
