// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Web.Controllers
{
    public partial class NewsFeedController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected NewsFeedController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetUnreadNews()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUnreadNews);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetUserActivity()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUserActivity);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextUserActivityPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextUserActivityPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetUserReputation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUserReputation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextUserReputationPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextUserReputationPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextOrganizationActivityPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextOrganizationActivityPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNewsFeedGroupUsers()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNewsFeedGroupUsers);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextNewsFeedGroupUsersPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextNewsFeedGroupUsersPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Rss()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Rss);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Back()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public NewsFeedController Actions { get { return MVC.NewsFeed; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "NewsFeed";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "NewsFeed";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetNextPage = "GetNextPage";
            public readonly string GetUnreadNews = "GetUnreadNews";
            public readonly string GetUnreadNewsCount = "GetUnreadNewsCount";
            public readonly string GetUserActivity = "GetUserActivity";
            public readonly string GetNextUserActivityPage = "GetNextUserActivityPage";
            public readonly string GetUserReputation = "GetUserReputation";
            public readonly string GetNextUserReputationPage = "GetNextUserReputationPage";
            public readonly string GetNextOrganizationActivityPage = "GetNextOrganizationActivityPage";
            public readonly string Delete = "Delete";
            public readonly string GetNewsFeedGroupUsers = "GetNewsFeedGroupUsers";
            public readonly string GetNextNewsFeedGroupUsersPage = "GetNextNewsFeedGroupUsersPage";
            public readonly string Default = "Default";
            public readonly string DefaultAsync = "DefaultAsync";
            public readonly string Rss = "Rss";
            public readonly string RedirectToSuccessAction = "RedirectToSuccessAction";
            public readonly string RedirectToFailureAction = "RedirectToFailureAction";
            public readonly string SaveAndRedirect = "SaveAndRedirect";
            public readonly string DeleteAndRedirect = "DeleteAndRedirect";
            public readonly string Back = "Back";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetNextPage = "GetNextPage";
            public const string GetUnreadNews = "GetUnreadNews";
            public const string GetUnreadNewsCount = "GetUnreadNewsCount";
            public const string GetUserActivity = "GetUserActivity";
            public const string GetNextUserActivityPage = "GetNextUserActivityPage";
            public const string GetUserReputation = "GetUserReputation";
            public const string GetNextUserReputationPage = "GetNextUserReputationPage";
            public const string GetNextOrganizationActivityPage = "GetNextOrganizationActivityPage";
            public const string Delete = "Delete";
            public const string GetNewsFeedGroupUsers = "GetNewsFeedGroupUsers";
            public const string GetNextNewsFeedGroupUsersPage = "GetNextNewsFeedGroupUsersPage";
            public const string Default = "Default";
            public const string DefaultAsync = "DefaultAsync";
            public const string Rss = "Rss";
            public const string RedirectToSuccessAction = "RedirectToSuccessAction";
            public const string RedirectToFailureAction = "RedirectToFailureAction";
            public const string SaveAndRedirect = "SaveAndRedirect";
            public const string DeleteAndRedirect = "DeleteAndRedirect";
            public const string Back = "Back";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string listView = "listView";
        }
        static readonly ActionParamsClass_GetNextPage s_params_GetNextPage = new ActionParamsClass_GetNextPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextPage GetNextPageParams { get { return s_params_GetNextPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextPage
        {
            public readonly string pageIndex = "pageIndex";
            public readonly string view = "view";
        }
        static readonly ActionParamsClass_GetUnreadNews s_params_GetUnreadNews = new ActionParamsClass_GetUnreadNews();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUnreadNews GetUnreadNewsParams { get { return s_params_GetUnreadNews; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUnreadNews
        {
            public readonly string lastQueryDate = "lastQueryDate";
            public readonly string view = "view";
        }
        static readonly ActionParamsClass_GetUserActivity s_params_GetUserActivity = new ActionParamsClass_GetUserActivity();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserActivity GetUserActivityParams { get { return s_params_GetUserActivity; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserActivity
        {
            public readonly string userObjectId = "userObjectId";
        }
        static readonly ActionParamsClass_GetNextUserActivityPage s_params_GetNextUserActivityPage = new ActionParamsClass_GetNextUserActivityPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextUserActivityPage GetNextUserActivityPageParams { get { return s_params_GetNextUserActivityPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextUserActivityPage
        {
            public readonly string userObjectId = "userObjectId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_GetUserReputation s_params_GetUserReputation = new ActionParamsClass_GetUserReputation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserReputation GetUserReputationParams { get { return s_params_GetUserReputation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserReputation
        {
            public readonly string userObjectId = "userObjectId";
        }
        static readonly ActionParamsClass_GetNextUserReputationPage s_params_GetNextUserReputationPage = new ActionParamsClass_GetNextUserReputationPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextUserReputationPage GetNextUserReputationPageParams { get { return s_params_GetNextUserReputationPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextUserReputationPage
        {
            public readonly string userObjectId = "userObjectId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_GetNextOrganizationActivityPage s_params_GetNextOrganizationActivityPage = new ActionParamsClass_GetNextOrganizationActivityPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextOrganizationActivityPage GetNextOrganizationActivityPageParams { get { return s_params_GetNextOrganizationActivityPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextOrganizationActivityPage
        {
            public readonly string organizationId = "organizationId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string userDbId = "userDbId";
            public readonly string objectId = "objectId";
            public readonly string actionTypeId = "actionTypeId";
            public readonly string relatedObjectId = "relatedObjectId";
            public readonly string text = "text";
            public readonly string isPrivate = "isPrivate";
            public readonly string organizationId = "organizationId";
        }
        static readonly ActionParamsClass_GetNewsFeedGroupUsers s_params_GetNewsFeedGroupUsers = new ActionParamsClass_GetNewsFeedGroupUsers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNewsFeedGroupUsers GetNewsFeedGroupUsersParams { get { return s_params_GetNewsFeedGroupUsers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNewsFeedGroupUsers
        {
            public readonly string view = "view";
            public readonly string actionTypeId = "actionTypeId";
            public readonly string objectId = "objectId";
            public readonly string date = "date";
            public readonly string relatedObjectId = "relatedObjectId";
            public readonly string organizationId = "organizationId";
            public readonly string text = "text";
            public readonly string isPrivate = "isPrivate";
        }
        static readonly ActionParamsClass_GetNextNewsFeedGroupUsersPage s_params_GetNextNewsFeedGroupUsersPage = new ActionParamsClass_GetNextNewsFeedGroupUsersPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextNewsFeedGroupUsersPage GetNextNewsFeedGroupUsersPageParams { get { return s_params_GetNextNewsFeedGroupUsersPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextNewsFeedGroupUsersPage
        {
            public readonly string pageIndex = "pageIndex";
            public readonly string view = "view";
            public readonly string actionTypeId = "actionTypeId";
            public readonly string objectId = "objectId";
            public readonly string date = "date";
            public readonly string relatedObjectId = "relatedObjectId";
            public readonly string organizationId = "organizationId";
            public readonly string text = "text";
            public readonly string isPrivate = "isPrivate";
        }
        static readonly ActionParamsClass_Default s_params_Default = new ActionParamsClass_Default();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Default DefaultParams { get { return s_params_Default; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Default
        {
            public readonly string lang = "lang";
        }
        static readonly ActionParamsClass_Rss s_params_Rss = new ActionParamsClass_Rss();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Rss RssParams { get { return s_params_Rss; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Rss
        {
            public readonly string userId = "userId";
            public readonly string userName = "userName";
        }
        static readonly ActionParamsClass_RedirectToSuccessAction s_params_RedirectToSuccessAction = new ActionParamsClass_RedirectToSuccessAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToSuccessAction RedirectToSuccessActionParams { get { return s_params_RedirectToSuccessAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToSuccessAction
        {
            public readonly string result = "result";
            public readonly string message = "message";
            public readonly string openDialog = "openDialog";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_RedirectToFailureAction s_params_RedirectToFailureAction = new ActionParamsClass_RedirectToFailureAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToFailureAction RedirectToFailureActionParams { get { return s_params_RedirectToFailureAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToFailureAction
        {
            public readonly string result = "result";
            public readonly string message = "message";
            public readonly string openDialog = "openDialog";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_SaveAndRedirect s_params_SaveAndRedirect = new ActionParamsClass_SaveAndRedirect();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveAndRedirect SaveAndRedirectParams { get { return s_params_SaveAndRedirect; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveAndRedirect
        {
            public readonly string save = "save";
            public readonly string result = "result";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_DeleteAndRedirect s_params_DeleteAndRedirect = new ActionParamsClass_DeleteAndRedirect();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteAndRedirect DeleteAndRedirectParams { get { return s_params_DeleteAndRedirect; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteAndRedirect
        {
            public readonly string delete = "delete";
            public readonly string result = "result";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_Back s_params_Back = new ActionParamsClass_Back();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Back BackParams { get { return s_params_Back; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Back
        {
            public readonly string returnTo = "returnTo";
            public readonly string defaultReturnTo = "defaultReturnTo";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _Index = "_Index";
                public readonly string DashboardFinishedIdeas = "DashboardFinishedIdeas";
                public readonly string DashboardFinishedIssues = "DashboardFinishedIssues";
                public readonly string DashboardIdea = "DashboardIdea";
                public readonly string DashboardIdeas = "DashboardIdeas";
                public readonly string DashboardIssues = "DashboardIssues";
                public readonly string Default = "Default";
                public readonly string Default_NoMobile = "Default.NoMobile";
                public readonly string FinishedIdeasList = "FinishedIdeasList";
                public readonly string FinishedIssuesList = "FinishedIssuesList";
                public readonly string IdeasList = "IdeasList";
                public readonly string IssuesList = "IssuesList";
                public readonly string List = "List";
                public readonly string ListContainer = "ListContainer";
                public readonly string OrganizationActivityListContainer = "OrganizationActivityListContainer";
                public readonly string UserActivityListContainer = "UserActivityListContainer";
                public readonly string UserReputationListContainer = "UserReputationListContainer";
            }
            public readonly string _Index = "~/Views/NewsFeed/_Index.cshtml";
            public readonly string DashboardFinishedIdeas = "~/Views/NewsFeed/DashboardFinishedIdeas.cshtml";
            public readonly string DashboardFinishedIssues = "~/Views/NewsFeed/DashboardFinishedIssues.cshtml";
            public readonly string DashboardIdea = "~/Views/NewsFeed/DashboardIdea.cshtml";
            public readonly string DashboardIdeas = "~/Views/NewsFeed/DashboardIdeas.cshtml";
            public readonly string DashboardIssues = "~/Views/NewsFeed/DashboardIssues.cshtml";
            public readonly string Default = "~/Views/NewsFeed/Default.cshtml";
            public readonly string Default_NoMobile = "~/Views/NewsFeed/Default.NoMobile.cshtml";
            public readonly string FinishedIdeasList = "~/Views/NewsFeed/FinishedIdeasList.cshtml";
            public readonly string FinishedIssuesList = "~/Views/NewsFeed/FinishedIssuesList.cshtml";
            public readonly string IdeasList = "~/Views/NewsFeed/IdeasList.cshtml";
            public readonly string IssuesList = "~/Views/NewsFeed/IssuesList.cshtml";
            public readonly string List = "~/Views/NewsFeed/List.cshtml";
            public readonly string ListContainer = "~/Views/NewsFeed/ListContainer.cshtml";
            public readonly string OrganizationActivityListContainer = "~/Views/NewsFeed/OrganizationActivityListContainer.cshtml";
            public readonly string UserActivityListContainer = "~/Views/NewsFeed/UserActivityListContainer.cshtml";
            public readonly string UserReputationListContainer = "~/Views/NewsFeed/UserReputationListContainer.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_NewsFeedController : Web.Controllers.NewsFeedController
    {
        public T4MVC_NewsFeedController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Services.Enums.NewsFeedListViews listView);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(Services.Enums.NewsFeedListViews listView)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "listView", listView);
            IndexOverride(callInfo, listView);
            return callInfo;
        }

        [NonAction]
        partial void GetNextPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? pageIndex, Services.Enums.NewsFeedListViews view);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextPage(int? pageIndex, Services.Enums.NewsFeedListViews view)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "view", view);
            GetNextPageOverride(callInfo, pageIndex, view);
            return callInfo;
        }

        [NonAction]
        partial void GetUnreadNewsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime lastQueryDate, Services.Enums.NewsFeedListViews view);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetUnreadNews(System.DateTime lastQueryDate, Services.Enums.NewsFeedListViews view)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUnreadNews);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lastQueryDate", lastQueryDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "view", view);
            GetUnreadNewsOverride(callInfo, lastQueryDate, view);
            return callInfo;
        }

        [NonAction]
        partial void GetUnreadNewsCountOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetUnreadNewsCount()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUnreadNewsCount);
            GetUnreadNewsCountOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetUserActivityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetUserActivity(string userObjectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUserActivity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            GetUserActivityOverride(callInfo, userObjectId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextUserActivityPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextUserActivityPage(string userObjectId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextUserActivityPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetNextUserActivityPageOverride(callInfo, userObjectId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void GetUserReputationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetUserReputation(string userObjectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUserReputation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            GetUserReputationOverride(callInfo, userObjectId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextUserReputationPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextUserReputationPage(string userObjectId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextUserReputationPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetNextUserReputationPageOverride(callInfo, userObjectId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void GetNextOrganizationActivityPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string organizationId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextOrganizationActivityPage(string organizationId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextOrganizationActivityPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetNextOrganizationActivityPageOverride(callInfo, organizationId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int userDbId, string objectId, int actionTypeId, string relatedObjectId, string text, bool isPrivate, string organizationId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(int userDbId, string objectId, int actionTypeId, string relatedObjectId, string text, bool isPrivate, string organizationId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userDbId", userDbId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "objectId", objectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionTypeId", actionTypeId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "relatedObjectId", relatedObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "text", text);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isPrivate", isPrivate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            DeleteOverride(callInfo, userDbId, objectId, actionTypeId, relatedObjectId, text, isPrivate, organizationId);
            return callInfo;
        }

        [NonAction]
        partial void GetNewsFeedGroupUsersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Services.Enums.NewsFeedListViews? view, int? actionTypeId, string objectId, System.DateTime? date, string relatedObjectId, string organizationId, string text, bool? isPrivate);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNewsFeedGroupUsers(Services.Enums.NewsFeedListViews? view, int? actionTypeId, string objectId, System.DateTime? date, string relatedObjectId, string organizationId, string text, bool? isPrivate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNewsFeedGroupUsers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "view", view);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionTypeId", actionTypeId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "objectId", objectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "date", date);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "relatedObjectId", relatedObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "text", text);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isPrivate", isPrivate);
            GetNewsFeedGroupUsersOverride(callInfo, view, actionTypeId, objectId, date, relatedObjectId, organizationId, text, isPrivate);
            return callInfo;
        }

        [NonAction]
        partial void GetNextNewsFeedGroupUsersPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? pageIndex, Services.Enums.NewsFeedListViews? view, int? actionTypeId, string objectId, System.DateTime? date, string relatedObjectId, string organizationId, string text, bool? isPrivate);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextNewsFeedGroupUsersPage(int? pageIndex, Services.Enums.NewsFeedListViews? view, int? actionTypeId, string objectId, System.DateTime? date, string relatedObjectId, string organizationId, string text, bool? isPrivate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextNewsFeedGroupUsersPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "view", view);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionTypeId", actionTypeId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "objectId", objectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "date", date);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "relatedObjectId", relatedObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "text", text);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isPrivate", isPrivate);
            GetNextNewsFeedGroupUsersPageOverride(callInfo, pageIndex, view, actionTypeId, objectId, date, relatedObjectId, organizationId, text, isPrivate);
            return callInfo;
        }

        [NonAction]
        partial void DefaultOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string lang);

        [NonAction]
        public override System.Web.Mvc.ActionResult Default(string lang)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Default);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lang", lang);
            DefaultOverride(callInfo, lang);
            return callInfo;
        }

        [NonAction]
        partial void DefaultAsyncOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> DefaultAsync()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DefaultAsync);
            DefaultAsyncOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void RssOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int userId, string userName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Rss(int userId, string userName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Rss);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userName", userName);
            RssOverride(callInfo, userId, userName);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Mvc.ActionResult result, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, result, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Mvc.ActionResult result, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, result, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToFailureActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction(System.Web.Mvc.ActionResult result, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToFailureActionOverride(callInfo, result, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void SaveAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action save, System.Web.Mvc.ActionResult result);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect(System.Action save, System.Web.Mvc.ActionResult result)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "save", save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            SaveAndRedirectOverride(callInfo, save, result);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action delete, System.Web.Mvc.ActionResult result);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect(System.Action delete, System.Web.Mvc.ActionResult result)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "delete", delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            DeleteAndRedirectOverride(callInfo, delete, result);
            return callInfo;
        }

        [NonAction]
        partial void BackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnTo, string defaultReturnTo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Back(string returnTo, string defaultReturnTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnTo", returnTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "defaultReturnTo", defaultReturnTo);
            BackOverride(callInfo, returnTo, defaultReturnTo);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, routeValueDictionary, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, routeValueDictionary, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToFailureActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToFailureActionOverride(callInfo, routeValueDictionary, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void SaveAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action save, System.Web.Routing.RouteValueDictionary routeValueDictionary);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect(System.Action save, System.Web.Routing.RouteValueDictionary routeValueDictionary)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "save", save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            SaveAndRedirectOverride(callInfo, save, routeValueDictionary);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action delete, System.Web.Routing.RouteValueDictionary routeValueDictionary);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect(System.Action delete, System.Web.Routing.RouteValueDictionary routeValueDictionary)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "delete", delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            DeleteAndRedirectOverride(callInfo, delete, routeValueDictionary);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
