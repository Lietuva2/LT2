@model Data.ViewModels.Problem.ProblemIndexModel

@using Data.Enums
@using Globalization.Resources.Idea
@using Globalization.Resources.Shared
@using Framework.Lists
@using Services.Enums
@using Web.Helpers
@using Globalization.Resources.Idea
<div data-role="add_idea_hidden" class="hide">
    @Html.AutoComplete("txtIdea", "IdeaId", MVC.Idea.GetMatchedIdeas(), "txt_90", "function(){$('#list').problems('select');}", true, new Dictionary<string, object> { { "placeholder", Globalization.Resources.Idea.Resource.ChooseSolution } })
</div>

@if (Model.Items.List.Any())
{
    <div class="clearfix">
        <p class="fl">
            @Html.ActionLink(Resource.SortNearest, MVC.Organization.Details(Model.OrganizationId, null, OrganizationViews.Problems, null, null, ProblemListSorts.Newest), new Dictionary<string, object> {{"class", Model.ListSort == (int) ProblemListSorts.Newest ? "highlight" : ""}})
            &nbsp; @Html.ActionLink(Resource.SortActive, MVC.Organization.Details(Model.OrganizationId, null, OrganizationViews.Problems, null, null, ProblemListSorts.MostSupported), new Dictionary<string, object> {{"class", Model.ListSort == (int) ProblemListSorts.MostSupported ? "highlight" : ""}})
        </p>
        <p class="fr itemsCounter">@SharedStrings.TotalCount: <span id="spanTotalCount">@Model.TotalCount</span></p>
    </div>
}
@if (Model.IsEditable)
{
    @Html.Partial(MVC.Problem.Views.ProblemInput, Model)
}
<div class="clear"></div>
<div id="list" class="problem_list">
    @{ Html.RenderPartial(MVC.Problem.Views.List, Model.Items.List);}
</div>

@if (Model.Items.HasMoreElements)
{
    @Html.ActionLink(SharedStrings.More, "GetNextPage", "Problem", new { organizationId = Model.OrganizationId}, new { id = "lnkShowMore" })
}