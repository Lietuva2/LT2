// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Web.Controllers
{
    public partial class VotingController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected VotingController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Results()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Results);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextResultsPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextResultsPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Edit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Details()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Details);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetText()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetText);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddVersion()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddVersion);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetMoreComments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMoreComments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteCommentComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteCommentComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LikeComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LikeComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UndoLikeComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UndoLikeComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddCommentComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCommentComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VoteFor()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteFor);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VoteNeutral()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteNeutral);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VoteAgainst()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteAgainst);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CancelVote()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelVote);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddRelatedIdea()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddRelatedIdea);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetVotedIssues()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetVotedIssues);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextVotedIssuesPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextVotedIssuesPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetCommentedIssues()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCommentedIssues);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextCommentedIssuesPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextCommentedIssuesPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetCreatedIssues()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCreatedIssues);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNextCreatedIssuesPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextCreatedIssuesPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveMyCategories()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveMyCategories);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FilterPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FilterPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FilterResultsPage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FilterResultsPage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OfficialVote()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OfficialVote);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SendNotification()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendNotification);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetMoreTopFinishedIssues()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMoreTopFinishedIssues);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetMoreTopIssues()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMoreTopIssues);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PreviousIssue()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PreviousIssue);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult NextIssue()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NextIssue);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetMatchedIssues()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMatchedIssues);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GenerateReport()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GenerateReport);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CompareHistoryVersions()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompareHistoryVersions);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect()
        {
            return new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Back()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public VotingController Actions { get { return MVC.Voting; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Voting";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Voting";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string GetFinishedDashboard = "GetFinishedDashboard";
            public readonly string GetActiveDashboard = "GetActiveDashboard";
            public readonly string Index = "Index";
            public readonly string Results = "Results";
            public readonly string GetNextPage = "GetNextPage";
            public readonly string GetNextResultsPage = "GetNextResultsPage";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
            public readonly string Details = "Details";
            public readonly string GetText = "GetText";
            public readonly string AddVersion = "AddVersion";
            public readonly string AddComment = "AddComment";
            public readonly string GetMoreComments = "GetMoreComments";
            public readonly string DeleteComment = "DeleteComment";
            public readonly string DeleteCommentComment = "DeleteCommentComment";
            public readonly string LikeComment = "LikeComment";
            public readonly string UndoLikeComment = "UndoLikeComment";
            public readonly string AddCommentComment = "AddCommentComment";
            public readonly string VoteFor = "VoteFor";
            public readonly string VoteNeutral = "VoteNeutral";
            public readonly string VoteAgainst = "VoteAgainst";
            public readonly string CancelVote = "CancelVote";
            public readonly string EditMyCategories = "EditMyCategories";
            public readonly string AddRelatedIdea = "AddRelatedIdea";
            public readonly string GetVotedIssues = "GetVotedIssues";
            public readonly string GetNextVotedIssuesPage = "GetNextVotedIssuesPage";
            public readonly string GetCommentedIssues = "GetCommentedIssues";
            public readonly string GetNextCommentedIssuesPage = "GetNextCommentedIssuesPage";
            public readonly string GetCreatedIssues = "GetCreatedIssues";
            public readonly string GetNextCreatedIssuesPage = "GetNextCreatedIssuesPage";
            public readonly string SaveMyCategories = "SaveMyCategories";
            public readonly string FilterPage = "FilterPage";
            public readonly string FilterResultsPage = "FilterResultsPage";
            public readonly string OfficialVote = "OfficialVote";
            public readonly string GetAllIdeas = "GetAllIdeas";
            public readonly string SendNotification = "SendNotification";
            public readonly string Delete = "Delete";
            public readonly string UpdateDb = "UpdateDb";
            public readonly string GetMoreTopFinishedIssues = "GetMoreTopFinishedIssues";
            public readonly string GetMoreTopIssues = "GetMoreTopIssues";
            public readonly string PreviousIssue = "PreviousIssue";
            public readonly string NextIssue = "NextIssue";
            public readonly string GetMatchedIssues = "GetMatchedIssues";
            public readonly string GenerateReport = "GenerateReport";
            public readonly string CompareHistoryVersions = "CompareHistoryVersions";
            public readonly string RedirectToSuccessAction = "RedirectToSuccessAction";
            public readonly string RedirectToFailureAction = "RedirectToFailureAction";
            public readonly string SaveAndRedirect = "SaveAndRedirect";
            public readonly string DeleteAndRedirect = "DeleteAndRedirect";
            public readonly string Back = "Back";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string GetFinishedDashboard = "GetFinishedDashboard";
            public const string GetActiveDashboard = "GetActiveDashboard";
            public const string Index = "Index";
            public const string Results = "Results";
            public const string GetNextPage = "GetNextPage";
            public const string GetNextResultsPage = "GetNextResultsPage";
            public const string Create = "Create";
            public const string Edit = "Edit";
            public const string Details = "Details";
            public const string GetText = "GetText";
            public const string AddVersion = "AddVersion";
            public const string AddComment = "AddComment";
            public const string GetMoreComments = "GetMoreComments";
            public const string DeleteComment = "DeleteComment";
            public const string DeleteCommentComment = "DeleteCommentComment";
            public const string LikeComment = "LikeComment";
            public const string UndoLikeComment = "UndoLikeComment";
            public const string AddCommentComment = "AddCommentComment";
            public const string VoteFor = "VoteFor";
            public const string VoteNeutral = "VoteNeutral";
            public const string VoteAgainst = "VoteAgainst";
            public const string CancelVote = "CancelVote";
            public const string EditMyCategories = "EditMyCategories";
            public const string AddRelatedIdea = "AddRelatedIdea";
            public const string GetVotedIssues = "GetVotedIssues";
            public const string GetNextVotedIssuesPage = "GetNextVotedIssuesPage";
            public const string GetCommentedIssues = "GetCommentedIssues";
            public const string GetNextCommentedIssuesPage = "GetNextCommentedIssuesPage";
            public const string GetCreatedIssues = "GetCreatedIssues";
            public const string GetNextCreatedIssuesPage = "GetNextCreatedIssuesPage";
            public const string SaveMyCategories = "SaveMyCategories";
            public const string FilterPage = "FilterPage";
            public const string FilterResultsPage = "FilterResultsPage";
            public const string OfficialVote = "OfficialVote";
            public const string GetAllIdeas = "GetAllIdeas";
            public const string SendNotification = "SendNotification";
            public const string Delete = "Delete";
            public const string UpdateDb = "UpdateDb";
            public const string GetMoreTopFinishedIssues = "GetMoreTopFinishedIssues";
            public const string GetMoreTopIssues = "GetMoreTopIssues";
            public const string PreviousIssue = "PreviousIssue";
            public const string NextIssue = "NextIssue";
            public const string GetMatchedIssues = "GetMatchedIssues";
            public const string GenerateReport = "GenerateReport";
            public const string CompareHistoryVersions = "CompareHistoryVersions";
            public const string RedirectToSuccessAction = "RedirectToSuccessAction";
            public const string RedirectToFailureAction = "RedirectToFailureAction";
            public const string SaveAndRedirect = "SaveAndRedirect";
            public const string DeleteAndRedirect = "DeleteAndRedirect";
            public const string Back = "Back";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string issueListView = "issueListView";
            public readonly string issueListSort = "issueListSort";
            public readonly string organizationId = "organizationId";
        }
        static readonly ActionParamsClass_Results s_params_Results = new ActionParamsClass_Results();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Results ResultsParams { get { return s_params_Results; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Results
        {
            public readonly string issueListView = "issueListView";
            public readonly string issueListSort = "issueListSort";
            public readonly string organizationId = "organizationId";
        }
        static readonly ActionParamsClass_GetNextPage s_params_GetNextPage = new ActionParamsClass_GetNextPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextPage GetNextPageParams { get { return s_params_GetNextPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextPage
        {
            public readonly string pageIndex = "pageIndex";
            public readonly string organizationId = "organizationId";
        }
        static readonly ActionParamsClass_GetNextResultsPage s_params_GetNextResultsPage = new ActionParamsClass_GetNextResultsPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextResultsPage GetNextResultsPageParams { get { return s_params_GetNextResultsPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextResultsPage
        {
            public readonly string pageIndex = "pageIndex";
            public readonly string organizationId = "organizationId";
        }
        static readonly ActionParamsClass_Create s_params_Create = new ActionParamsClass_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Create CreateParams { get { return s_params_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Create
        {
            public readonly string organizationId = "organizationId";
            public readonly string relatedIdeaId = "relatedIdeaId";
            public readonly string problemId = "problemId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Edit s_params_Edit = new ActionParamsClass_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Edit EditParams { get { return s_params_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Edit
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Details s_params_Details = new ActionParamsClass_Details();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Details DetailsParams { get { return s_params_Details; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Details
        {
            public readonly string id = "id";
            public readonly string subject = "subject";
        }
        static readonly ActionParamsClass_GetText s_params_GetText = new ActionParamsClass_GetText();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetText GetTextParams { get { return s_params_GetText; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetText
        {
            public readonly string id = "id";
            public readonly string versionId = "versionId";
        }
        static readonly ActionParamsClass_AddVersion s_params_AddVersion = new ActionParamsClass_AddVersion();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddVersion AddVersionParams { get { return s_params_AddVersion; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddVersion
        {
            public readonly string id = "id";
            public readonly string summary = "summary";
        }
        static readonly ActionParamsClass_AddComment s_params_AddComment = new ActionParamsClass_AddComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddComment AddCommentParams { get { return s_params_AddComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddComment
        {
            public readonly string model = "model";
            public readonly string embed = "embed";
        }
        static readonly ActionParamsClass_GetMoreComments s_params_GetMoreComments = new ActionParamsClass_GetMoreComments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMoreComments GetMoreCommentsParams { get { return s_params_GetMoreComments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMoreComments
        {
            public readonly string issueId = "issueId";
            public readonly string posOrNeg = "posOrNeg";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_DeleteComment s_params_DeleteComment = new ActionParamsClass_DeleteComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteComment DeleteCommentParams { get { return s_params_DeleteComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteComment
        {
            public readonly string id = "id";
            public readonly string commentId = "commentId";
        }
        static readonly ActionParamsClass_DeleteCommentComment s_params_DeleteCommentComment = new ActionParamsClass_DeleteCommentComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteCommentComment DeleteCommentCommentParams { get { return s_params_DeleteCommentComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteCommentComment
        {
            public readonly string id = "id";
            public readonly string commentId = "commentId";
            public readonly string commentCommentId = "commentCommentId";
        }
        static readonly ActionParamsClass_LikeComment s_params_LikeComment = new ActionParamsClass_LikeComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LikeComment LikeCommentParams { get { return s_params_LikeComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LikeComment
        {
            public readonly string id = "id";
            public readonly string commentId = "commentId";
            public readonly string parentId = "parentId";
        }
        static readonly ActionParamsClass_UndoLikeComment s_params_UndoLikeComment = new ActionParamsClass_UndoLikeComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UndoLikeComment UndoLikeCommentParams { get { return s_params_UndoLikeComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UndoLikeComment
        {
            public readonly string id = "id";
            public readonly string commentId = "commentId";
            public readonly string parentId = "parentId";
        }
        static readonly ActionParamsClass_AddCommentComment s_params_AddCommentComment = new ActionParamsClass_AddCommentComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddCommentComment AddCommentCommentParams { get { return s_params_AddCommentComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddCommentComment
        {
            public readonly string model = "model";
            public readonly string embed = "embed";
        }
        static readonly ActionParamsClass_VoteFor s_params_VoteFor = new ActionParamsClass_VoteFor();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VoteFor VoteForParams { get { return s_params_VoteFor; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VoteFor
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_VoteNeutral s_params_VoteNeutral = new ActionParamsClass_VoteNeutral();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VoteNeutral VoteNeutralParams { get { return s_params_VoteNeutral; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VoteNeutral
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_VoteAgainst s_params_VoteAgainst = new ActionParamsClass_VoteAgainst();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VoteAgainst VoteAgainstParams { get { return s_params_VoteAgainst; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VoteAgainst
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CancelVote s_params_CancelVote = new ActionParamsClass_CancelVote();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CancelVote CancelVoteParams { get { return s_params_CancelVote; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CancelVote
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_EditMyCategories s_params_EditMyCategories = new ActionParamsClass_EditMyCategories();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditMyCategories EditMyCategoriesParams { get { return s_params_EditMyCategories; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditMyCategories
        {
            public readonly string categories = "categories";
        }
        static readonly ActionParamsClass_AddRelatedIdea s_params_AddRelatedIdea = new ActionParamsClass_AddRelatedIdea();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddRelatedIdea AddRelatedIdeaParams { get { return s_params_AddRelatedIdea; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddRelatedIdea
        {
            public readonly string id = "id";
            public readonly string name = "name";
        }
        static readonly ActionParamsClass_GetVotedIssues s_params_GetVotedIssues = new ActionParamsClass_GetVotedIssues();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetVotedIssues GetVotedIssuesParams { get { return s_params_GetVotedIssues; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetVotedIssues
        {
            public readonly string userObjectId = "userObjectId";
        }
        static readonly ActionParamsClass_GetNextVotedIssuesPage s_params_GetNextVotedIssuesPage = new ActionParamsClass_GetNextVotedIssuesPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextVotedIssuesPage GetNextVotedIssuesPageParams { get { return s_params_GetNextVotedIssuesPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextVotedIssuesPage
        {
            public readonly string userObjectId = "userObjectId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_GetCommentedIssues s_params_GetCommentedIssues = new ActionParamsClass_GetCommentedIssues();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCommentedIssues GetCommentedIssuesParams { get { return s_params_GetCommentedIssues; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCommentedIssues
        {
            public readonly string userObjectId = "userObjectId";
        }
        static readonly ActionParamsClass_GetNextCommentedIssuesPage s_params_GetNextCommentedIssuesPage = new ActionParamsClass_GetNextCommentedIssuesPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextCommentedIssuesPage GetNextCommentedIssuesPageParams { get { return s_params_GetNextCommentedIssuesPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextCommentedIssuesPage
        {
            public readonly string userObjectId = "userObjectId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_GetCreatedIssues s_params_GetCreatedIssues = new ActionParamsClass_GetCreatedIssues();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCreatedIssues GetCreatedIssuesParams { get { return s_params_GetCreatedIssues; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCreatedIssues
        {
            public readonly string userObjectId = "userObjectId";
        }
        static readonly ActionParamsClass_GetNextCreatedIssuesPage s_params_GetNextCreatedIssuesPage = new ActionParamsClass_GetNextCreatedIssuesPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNextCreatedIssuesPage GetNextCreatedIssuesPageParams { get { return s_params_GetNextCreatedIssuesPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNextCreatedIssuesPage
        {
            public readonly string userObjectId = "userObjectId";
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_SaveMyCategories s_params_SaveMyCategories = new ActionParamsClass_SaveMyCategories();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveMyCategories SaveMyCategoriesParams { get { return s_params_SaveMyCategories; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveMyCategories
        {
            public readonly string selectedCategoryIds = "selectedCategoryIds";
        }
        static readonly ActionParamsClass_FilterPage s_params_FilterPage = new ActionParamsClass_FilterPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FilterPage FilterPageParams { get { return s_params_FilterPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FilterPage
        {
            public readonly string selectedCategoryIds = "selectedCategoryIds";
        }
        static readonly ActionParamsClass_FilterResultsPage s_params_FilterResultsPage = new ActionParamsClass_FilterResultsPage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FilterResultsPage FilterResultsPageParams { get { return s_params_FilterResultsPage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FilterResultsPage
        {
            public readonly string selectedCategoryIds = "selectedCategoryIds";
        }
        static readonly ActionParamsClass_OfficialVote s_params_OfficialVote = new ActionParamsClass_OfficialVote();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OfficialVote OfficialVoteParams { get { return s_params_OfficialVote; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OfficialVote
        {
            public readonly string id = "id";
            public readonly string forAgainst = "forAgainst";
            public readonly string description = "description";
        }
        static readonly ActionParamsClass_SendNotification s_params_SendNotification = new ActionParamsClass_SendNotification();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendNotification SendNotificationParams { get { return s_params_SendNotification; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendNotification
        {
            public readonly string ideaId = "ideaId";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetMoreTopFinishedIssues s_params_GetMoreTopFinishedIssues = new ActionParamsClass_GetMoreTopFinishedIssues();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMoreTopFinishedIssues GetMoreTopFinishedIssuesParams { get { return s_params_GetMoreTopFinishedIssues; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMoreTopFinishedIssues
        {
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_GetMoreTopIssues s_params_GetMoreTopIssues = new ActionParamsClass_GetMoreTopIssues();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMoreTopIssues GetMoreTopIssuesParams { get { return s_params_GetMoreTopIssues; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMoreTopIssues
        {
            public readonly string pageIndex = "pageIndex";
        }
        static readonly ActionParamsClass_PreviousIssue s_params_PreviousIssue = new ActionParamsClass_PreviousIssue();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PreviousIssue PreviousIssueParams { get { return s_params_PreviousIssue; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PreviousIssue
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_NextIssue s_params_NextIssue = new ActionParamsClass_NextIssue();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_NextIssue NextIssueParams { get { return s_params_NextIssue; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_NextIssue
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetMatchedIssues s_params_GetMatchedIssues = new ActionParamsClass_GetMatchedIssues();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMatchedIssues GetMatchedIssuesParams { get { return s_params_GetMatchedIssues; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMatchedIssues
        {
            public readonly string prefix = "prefix";
        }
        static readonly ActionParamsClass_GenerateReport s_params_GenerateReport = new ActionParamsClass_GenerateReport();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GenerateReport GenerateReportParams { get { return s_params_GenerateReport; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GenerateReport
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CompareHistoryVersions s_params_CompareHistoryVersions = new ActionParamsClass_CompareHistoryVersions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CompareHistoryVersions CompareHistoryVersionsParams { get { return s_params_CompareHistoryVersions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CompareHistoryVersions
        {
            public readonly string id = "id";
            public readonly string historyId1 = "historyId1";
            public readonly string historyId2 = "historyId2";
        }
        static readonly ActionParamsClass_RedirectToSuccessAction s_params_RedirectToSuccessAction = new ActionParamsClass_RedirectToSuccessAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToSuccessAction RedirectToSuccessActionParams { get { return s_params_RedirectToSuccessAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToSuccessAction
        {
            public readonly string result = "result";
            public readonly string message = "message";
            public readonly string openDialog = "openDialog";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_RedirectToFailureAction s_params_RedirectToFailureAction = new ActionParamsClass_RedirectToFailureAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToFailureAction RedirectToFailureActionParams { get { return s_params_RedirectToFailureAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToFailureAction
        {
            public readonly string result = "result";
            public readonly string message = "message";
            public readonly string openDialog = "openDialog";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_SaveAndRedirect s_params_SaveAndRedirect = new ActionParamsClass_SaveAndRedirect();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveAndRedirect SaveAndRedirectParams { get { return s_params_SaveAndRedirect; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveAndRedirect
        {
            public readonly string save = "save";
            public readonly string result = "result";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_DeleteAndRedirect s_params_DeleteAndRedirect = new ActionParamsClass_DeleteAndRedirect();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteAndRedirect DeleteAndRedirectParams { get { return s_params_DeleteAndRedirect; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteAndRedirect
        {
            public readonly string delete = "delete";
            public readonly string result = "result";
            public readonly string routeValueDictionary = "routeValueDictionary";
        }
        static readonly ActionParamsClass_Back s_params_Back = new ActionParamsClass_Back();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Back BackParams { get { return s_params_Back; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Back
        {
            public readonly string returnTo = "returnTo";
            public readonly string defaultReturnTo = "defaultReturnTo";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _Create = "_Create";
                public readonly string _Details = "_Details";
                public readonly string _EditMyCategories = "_EditMyCategories";
                public readonly string _Index = "_Index";
                public readonly string _Results = "_Results";
                public readonly string _ResultsList = "_ResultsList";
                public readonly string _Versions = "_Versions";
                public readonly string ButtonThankYou = "ButtonThankYou";
                public readonly string List = "List";
                public readonly string Progress = "Progress";
                public readonly string RelatedIdea = "RelatedIdea";
                public readonly string VotingStatistics = "VotingStatistics";
            }
            public readonly string _Create = "~/Views/Voting/_Create.cshtml";
            public readonly string _Details = "~/Views/Voting/_Details.cshtml";
            public readonly string _EditMyCategories = "~/Views/Voting/_EditMyCategories.cshtml";
            public readonly string _Index = "~/Views/Voting/_Index.cshtml";
            public readonly string _Results = "~/Views/Voting/_Results.cshtml";
            public readonly string _ResultsList = "~/Views/Voting/_ResultsList.cshtml";
            public readonly string _Versions = "~/Views/Voting/_Versions.cshtml";
            public readonly string ButtonThankYou = "~/Views/Voting/ButtonThankYou.cshtml";
            public readonly string List = "~/Views/Voting/List.cshtml";
            public readonly string Progress = "~/Views/Voting/Progress.cshtml";
            public readonly string RelatedIdea = "~/Views/Voting/RelatedIdea.cshtml";
            public readonly string VotingStatistics = "~/Views/Voting/VotingStatistics.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_VotingController : Web.Controllers.VotingController
    {
        public T4MVC_VotingController() : base(Dummy.Instance) { }

        [NonAction]
        partial void GetFinishedDashboardOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFinishedDashboard()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFinishedDashboard);
            GetFinishedDashboardOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetActiveDashboardOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetActiveDashboard()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetActiveDashboard);
            GetActiveDashboardOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Services.Enums.IssueListViews? issueListView, Services.Enums.IssueListSorts? issueListSort, string organizationId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(Services.Enums.IssueListViews? issueListView, Services.Enums.IssueListSorts? issueListSort, string organizationId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "issueListView", issueListView);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "issueListSort", issueListSort);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            IndexOverride(callInfo, issueListView, issueListSort, organizationId);
            return callInfo;
        }

        [NonAction]
        partial void ResultsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Services.Enums.IssueListViews? issueListView, Services.Enums.IssueListSorts? issueListSort, string organizationId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Results(Services.Enums.IssueListViews? issueListView, Services.Enums.IssueListSorts? issueListSort, string organizationId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Results);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "issueListView", issueListView);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "issueListSort", issueListSort);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            ResultsOverride(callInfo, issueListView, issueListSort, organizationId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? pageIndex, string organizationId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextPage(int? pageIndex, string organizationId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            GetNextPageOverride(callInfo, pageIndex, organizationId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextResultsPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? pageIndex, string organizationId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextResultsPage(int? pageIndex, string organizationId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextResultsPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            GetNextResultsPageOverride(callInfo, pageIndex, organizationId);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string organizationId, string relatedIdeaId, string problemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create(string organizationId, string relatedIdeaId, string problemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "organizationId", organizationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "relatedIdeaId", relatedIdeaId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "problemId", problemId);
            CreateOverride(callInfo, organizationId, relatedIdeaId, problemId);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Voting.VotingCreateEditModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create(Data.ViewModels.Voting.VotingCreateEditModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CreateOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Edit(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Voting.VotingCreateEditModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Edit(Data.ViewModels.Voting.VotingCreateEditModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EditOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void DetailsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string subject);

        [NonAction]
        public override System.Web.Mvc.ActionResult Details(string id, string subject)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Details);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "subject", subject);
            DetailsOverride(callInfo, id, subject);
            return callInfo;
        }

        [NonAction]
        partial void GetTextOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string versionId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetText(string id, string versionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetText);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "versionId", versionId);
            GetTextOverride(callInfo, id, versionId);
            return callInfo;
        }

        [NonAction]
        partial void AddVersionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string summary);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddVersion(string id, string summary)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddVersion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "summary", summary);
            AddVersionOverride(callInfo, id, summary);
            return callInfo;
        }

        [NonAction]
        partial void AddCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Comments.CommentView model, Data.ViewModels.Base.EmbedModel embed);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddComment(Data.ViewModels.Comments.CommentView model, Data.ViewModels.Base.EmbedModel embed)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "embed", embed);
            AddCommentOverride(callInfo, model, embed);
            return callInfo;
        }

        [NonAction]
        partial void GetMoreCommentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string issueId, Data.Enums.ForAgainst? posOrNeg, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetMoreComments(string issueId, Data.Enums.ForAgainst? posOrNeg, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMoreComments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "issueId", issueId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "posOrNeg", posOrNeg);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetMoreCommentsOverride(callInfo, issueId, posOrNeg, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void DeleteCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string commentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteComment(string id, string commentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentId", commentId);
            DeleteCommentOverride(callInfo, id, commentId);
            return callInfo;
        }

        [NonAction]
        partial void DeleteCommentCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string commentId, string commentCommentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteCommentComment(string id, string commentId, string commentCommentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteCommentComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentId", commentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentCommentId", commentCommentId);
            DeleteCommentCommentOverride(callInfo, id, commentId, commentCommentId);
            return callInfo;
        }

        [NonAction]
        partial void LikeCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string commentId, string parentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult LikeComment(string id, string commentId, string parentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LikeComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentId", commentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            LikeCommentOverride(callInfo, id, commentId, parentId);
            return callInfo;
        }

        [NonAction]
        partial void UndoLikeCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string commentId, string parentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult UndoLikeComment(string id, string commentId, string parentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UndoLikeComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "commentId", commentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            UndoLikeCommentOverride(callInfo, id, commentId, parentId);
            return callInfo;
        }

        [NonAction]
        partial void AddCommentCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Data.ViewModels.Comments.CommentView model, Data.ViewModels.Base.EmbedModel embed);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddCommentComment(Data.ViewModels.Comments.CommentView model, Data.ViewModels.Base.EmbedModel embed)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCommentComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "embed", embed);
            AddCommentCommentOverride(callInfo, model, embed);
            return callInfo;
        }

        [NonAction]
        partial void VoteForOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult VoteFor(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteFor);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            VoteForOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void VoteNeutralOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult VoteNeutral(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteNeutral);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            VoteNeutralOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void VoteAgainstOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult VoteAgainst(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VoteAgainst);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            VoteAgainstOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CancelVoteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult CancelVote(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelVote);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CancelVoteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditMyCategoriesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditMyCategories()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditMyCategories);
            EditMyCategoriesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void EditMyCategoriesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IList<Data.ViewModels.Voting.CategorySelectModel> categories);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditMyCategories(System.Collections.Generic.IList<Data.ViewModels.Voting.CategorySelectModel> categories)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditMyCategories);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categories", categories);
            EditMyCategoriesOverride(callInfo, categories);
            return callInfo;
        }

        [NonAction]
        partial void AddRelatedIdeaOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string name);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddRelatedIdea(string id, string name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddRelatedIdea);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "name", name);
            AddRelatedIdeaOverride(callInfo, id, name);
            return callInfo;
        }

        [NonAction]
        partial void GetVotedIssuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetVotedIssues(string userObjectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetVotedIssues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            GetVotedIssuesOverride(callInfo, userObjectId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextVotedIssuesPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextVotedIssuesPage(string userObjectId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextVotedIssuesPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetNextVotedIssuesPageOverride(callInfo, userObjectId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void GetCommentedIssuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCommentedIssues(string userObjectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCommentedIssues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            GetCommentedIssuesOverride(callInfo, userObjectId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextCommentedIssuesPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextCommentedIssuesPage(string userObjectId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextCommentedIssuesPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetNextCommentedIssuesPageOverride(callInfo, userObjectId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void GetCreatedIssuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCreatedIssues(string userObjectId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCreatedIssues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            GetCreatedIssuesOverride(callInfo, userObjectId);
            return callInfo;
        }

        [NonAction]
        partial void GetNextCreatedIssuesPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userObjectId, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextCreatedIssuesPage(string userObjectId, int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextCreatedIssuesPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userObjectId", userObjectId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetNextCreatedIssuesPageOverride(callInfo, userObjectId, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void SaveMyCategoriesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IList<int> selectedCategoryIds);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveMyCategories(System.Collections.Generic.IList<int> selectedCategoryIds)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveMyCategories);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedCategoryIds", selectedCategoryIds);
            SaveMyCategoriesOverride(callInfo, selectedCategoryIds);
            return callInfo;
        }

        [NonAction]
        partial void FilterPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.List<int> selectedCategoryIds);

        [NonAction]
        public override System.Web.Mvc.ActionResult FilterPage(System.Collections.Generic.List<int> selectedCategoryIds)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FilterPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedCategoryIds", selectedCategoryIds);
            FilterPageOverride(callInfo, selectedCategoryIds);
            return callInfo;
        }

        [NonAction]
        partial void FilterResultsPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.List<int> selectedCategoryIds);

        [NonAction]
        public override System.Web.Mvc.ActionResult FilterResultsPage(System.Collections.Generic.List<int> selectedCategoryIds)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FilterResultsPage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedCategoryIds", selectedCategoryIds);
            FilterResultsPageOverride(callInfo, selectedCategoryIds);
            return callInfo;
        }

        [NonAction]
        partial void OfficialVoteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, Data.Enums.ForAgainst forAgainst, string description);

        [NonAction]
        public override System.Web.Mvc.ActionResult OfficialVote(string id, Data.Enums.ForAgainst forAgainst, string description)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OfficialVote);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forAgainst", forAgainst);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "description", description);
            OfficialVoteOverride(callInfo, id, forAgainst, description);
            return callInfo;
        }

        [NonAction]
        partial void GetAllIdeasOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAllIdeas()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllIdeas);
            GetAllIdeasOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SendNotificationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ideaId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendNotification(string ideaId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendNotification);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ideaId", ideaId);
            SendNotificationOverride(callInfo, ideaId);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDbOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDb()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDb);
            UpdateDbOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetMoreTopFinishedIssuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetMoreTopFinishedIssues(int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMoreTopFinishedIssues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetMoreTopFinishedIssuesOverride(callInfo, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void GetMoreTopIssuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? pageIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetMoreTopIssues(int? pageIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMoreTopIssues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageIndex", pageIndex);
            GetMoreTopIssuesOverride(callInfo, pageIndex);
            return callInfo;
        }

        [NonAction]
        partial void PreviousIssueOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PreviousIssue(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PreviousIssue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PreviousIssueOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void NextIssueOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult NextIssue(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NextIssue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            NextIssueOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void GetMatchedIssuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string prefix);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetMatchedIssues(string prefix)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetMatchedIssues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "prefix", prefix);
            GetMatchedIssuesOverride(callInfo, prefix);
            return callInfo;
        }

        [NonAction]
        partial void GenerateReportOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult GenerateReport(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GenerateReport);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GenerateReportOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CompareHistoryVersionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string historyId1, string historyId2);

        [NonAction]
        public override System.Web.Mvc.ActionResult CompareHistoryVersions(string id, string historyId1, string historyId2)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompareHistoryVersions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "historyId1", historyId1);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "historyId2", historyId2);
            CompareHistoryVersionsOverride(callInfo, id, historyId1, historyId2);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Mvc.ActionResult result, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, result, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Mvc.ActionResult result, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, result, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToFailureActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Mvc.ActionResult result, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction(System.Web.Mvc.ActionResult result, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToFailureActionOverride(callInfo, result, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void SaveAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action save, System.Web.Mvc.ActionResult result);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect(System.Action save, System.Web.Mvc.ActionResult result)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "save", save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            SaveAndRedirectOverride(callInfo, save, result);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action delete, System.Web.Mvc.ActionResult result);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect(System.Action delete, System.Web.Mvc.ActionResult result)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "delete", delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "result", result);
            DeleteAndRedirectOverride(callInfo, delete, result);
            return callInfo;
        }

        [NonAction]
        partial void BackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnTo, string defaultReturnTo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Back(string returnTo, string defaultReturnTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnTo", returnTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "defaultReturnTo", defaultReturnTo);
            BackOverride(callInfo, returnTo, defaultReturnTo);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, routeValueDictionary, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToSuccessActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToSuccessAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToSuccessAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToSuccessActionOverride(callInfo, routeValueDictionary, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToFailureActionOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult RedirectToFailureAction(System.Web.Routing.RouteValueDictionary routeValueDictionary, string message, bool openDialog)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.RedirectToFailureAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "message", message);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "openDialog", openDialog);
            RedirectToFailureActionOverride(callInfo, routeValueDictionary, message, openDialog);
            return callInfo;
        }

        [NonAction]
        partial void SaveAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action save, System.Web.Routing.RouteValueDictionary routeValueDictionary);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult SaveAndRedirect(System.Action save, System.Web.Routing.RouteValueDictionary routeValueDictionary)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.SaveAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "save", save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            SaveAndRedirectOverride(callInfo, save, routeValueDictionary);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAndRedirectOverride(T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult callInfo, System.Action delete, System.Web.Routing.RouteValueDictionary routeValueDictionary);

        [NonAction]
        public override Framework.Mvc.ActionResults.RedirectToRouteWithTempDataResult DeleteAndRedirect(System.Action delete, System.Web.Routing.RouteValueDictionary routeValueDictionary)
        {
            var callInfo = new T4MVC_Framework_Mvc_ActionResults_RedirectToRouteWithTempDataResult(Area, Name, ActionNames.DeleteAndRedirect);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "delete", delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValueDictionary", routeValueDictionary);
            DeleteAndRedirectOverride(callInfo, delete, routeValueDictionary);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
