//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.EF.Actions
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ActionsEntities : DbContext
    {
        public ActionsEntities()
            : base("name=ActionsEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActionType> ActionTypes { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Categories_Translation> Categories_Translation { get; set; }
        public virtual DbSet<InterestingCategory> InterestingCategories { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Subscribtion> Subscribtions { get; set; }
        public virtual DbSet<UserInterestingOrganization> UserInterestingOrganizations { get; set; }
        public virtual DbSet<UserInterestingUser> UserInterestingUsers { get; set; }
        public virtual DbSet<ActionView> ActionViews { get; set; }
        public virtual DbSet<OrganizationActionView> OrganizationActionViews { get; set; }
        public virtual DbSet<Action> Actions { get; set; }
        public virtual DbSet<ActionCategory> ActionCategories { get; set; }
    
        public virtual int LikeUser(Nullable<int> interestedUserId, Nullable<int> interestingUserId)
        {
            var interestedUserIdParameter = interestedUserId.HasValue ?
                new ObjectParameter("interestedUserId", interestedUserId) :
                new ObjectParameter("interestedUserId", typeof(int));
    
            var interestingUserIdParameter = interestingUserId.HasValue ?
                new ObjectParameter("interestingUserId", interestingUserId) :
                new ObjectParameter("interestingUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LikeUser", interestedUserIdParameter, interestingUserIdParameter);
        }
    }
}
